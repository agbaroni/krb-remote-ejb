embed-server --server-config=standalone-full.xml

:write-attribute(name=name,value=frontend)

/system-property=java.security.krb5.realm:add(value=EXAMPLE.COM)
/system-property=java.security.krb5.kdc:add(value=kerberos)
/system-property=javax.security.auth.useSubjectCredsOnly:add(value=false)
/system-property=sun.security.krb5.debug:add(value=true)

/subsystem=elytron/kerberos-security-factory=frontend-security-factory:add(path=example.keytab,relative-to=jboss.server.config.dir,principal=HTTP/frontend@EXAMPLE.COM,mechanism-names=[KRB5,SPNEGO])

/subsystem=elytron/security-domain=frontend-domain:add(realms=[{realm=ApplicationRealm,role-decoder=groups-to-roles}],default-realm=ApplicationRealm,permission-mapper=default-permission-mapper)

/subsystem=elytron/http-authentication-factory=frontend-http-authentication-factory:add(http-server-mechanism-factory=global,security-domain=frontend-domain,mechanism-configurations=[{mechanism-name=SPNEGO,mechanism-realm-configurations=[{realm-name=frontend-domain}],credential-security-factory=frontend-security-factory}])

/subsystem=undertow/application-security-domain=frontend:add(http-authentication-factory=frontend-http-authentication-factory)

/subsystem=logging/root-logger=ROOT:write-attribute(name=level,value=ALL)

/subsystem=logging/console-handler=CONSOLE:write-attribute(name=level,value=ALL)

/subsystem=logging/logger=org.jboss.as.controller.management-operation:add(level=INFO)

/subsystem=logging/logger=org.jboss.modules:add(level=INFO)

# /subsystem=elytron/kerberos-security-factory=backend-security-factory:add(path=example.keytab,relative-to=jboss.server.config.dir,principal=remote/backend@EXAMPLE.COM,mechanism-names=[KRB5])

/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=backend-destination:add(host=backend,port=8080)

/subsystem=elytron/authentication-configuration=backend-configuration:add(security-domain=frontend-domain,sasl-mechanism-selector=GSSAPI,protocol=remote+http)

/subsystem=elytron/authentication-context=backend-context:add(match-rules=[{authentication-configuration=backend-configuration}]

/subsystem=elytron:write-attribute(name=default-authentication-context,value=backend-context)

/subsystem=remoting/remote-outbound-connection=backend-connection:add(outbound-socket-binding-ref=backend-destination)

deploy /vagrant/sources/frontend/application/target/krb-propagate-frontend-application-0.1.0-SNAPSHOT.ear
